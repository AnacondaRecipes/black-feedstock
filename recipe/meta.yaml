{% set name = "black" %}
{% set version = "25.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 33496d5cd1222ad73391352b4ae8da15253c5de89b93a80b3e2c8d9a19ec2666
  patches:
    - patches/0001-Fix-f-string-format-spec-CI-failure-4690.patch

build:
  number: 0
  script: {{ PYTHON }} -m pip install --no-deps --no-build-isolation -vv .
  entry_points:
    - black = black:patched_main
    - blackd = blackd:patched_main
  skip: True # [py<39]

requirements:
  build:
    - patch  # [unix]
    - m2-patch  # [win]
  host:
    - python
    - pip
    - hatchling >=1.20.0
    - hatch-vcs
    - hatch-fancy-pypi-readme
  run:
    - python
    - click >=8.0.0
    - mypy_extensions >=0.4.3
    - packaging >=22.0
    - pathspec >=0.9.0
    - platformdirs >=2
    - tomli >=1.1.0  # [py<311]
    - typing_extensions >=4.0.1 # [py<311]
  run_constrained:
    - aiohttp >=3.10
    - colorama >=0.4.3
    - uvloop >=0.15.2
    - ipython >=7.8.0
    - tokenize-rt >=3.2.0

test:
  source_files:
    - tests
    - src/black/__init__.py
    - pyproject.toml
  imports:
    - black
    - black._width_table
    - black.brackets
    - black.cache
    - black.comments
    - black.const
    - black.files
    - black.handle_ipynb_magics
    - black.linegen
    - black.lines
    - black.mode
    - black.nodes
    - black.numerics
    - black.output
    - black.parsing
    - black.ranges
    - black.report
    - black.rusty
    - black.strings
    - black.trans
    - black.concurrency
    - blackd
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - black --help
    - blackd --help
    - pytest -v tests
  requires:
    - pip
    - pytest >=6.1.1
    - aiohttp >=3.10

about:
  home: https://github.com/psf/black
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: The Uncompromising Code Formatter
  description: |
    Black is the uncompromising Python code formatter. By using it, you agree
    to cease control over minutiae of hand-formatting. In return, Black gives
    you speed, determinism, and freedom from pycodestyle nagging about
    formatting. You will save time and mental energy for more important matters.
  doc_url: https://black.readthedocs.io
  dev_url: https://github.com/psf/black

extra:
  recipe-maintainers:
    - carlodri
    - ambv
    - mariusvniekerk
    - xhochy
